# Multi-stage build for the off-chain Go application
# Build stage
FROM golang:1.24.5-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates tzdata

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application with optimizations for production
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags="-w -s" \
    -o /app/sum-node \
    ./cmd/node

# Runtime stage
FROM alpine:3.19

RUN apk add --no-cache ca-certificates tzdata jq


# Set working directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/sum-node .

# Expose port if needed (adjust based on your application)
# EXPOSE 8080

# Set the entrypoint
ENTRYPOINT ["./sum-node"]

# Default command (can be overridden)
CMD ["--help"] 